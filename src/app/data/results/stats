model = KerasRNNModel(has_quality=True, prediction_length=k, batch_size=64, epochs=5, latent_dim=100)
Predicting training set
Mean Match = 0.3480046259826023
Predicting and Validation took 279.53999999999996s
Predicting validation set
Mean Match = 0.35112546300693326
Predicting and Validation took 51.460000000000036s



model = KerasRNNModel(has_quality=True, prediction_length=k, batch_size=64, epochs=3, latent_dim=100)
Fitting took 224.17999999999998s
Predicting training set
Mean Match = 0.3260312086217589
Predicting and Validation took 273.53999999999996s
Predicting validation set
Mean Match = 0.32795137240003797
Predicting and Validation took 47.83000000000004s


model = KerasRNNModel(has_quality=True, prediction_length=k, batch_size=64, epochs=3, latent_dim=50)
Predicting training set
Mean Match = 0.3202319695623753
Predicting and Validation took 254.64s
Predicting validation set
Mean Match = 0.330325766929433
Predicting and Validation took 45.14000000000004s

model = KerasRNNModel(has_quality=True, prediction_length=k, batch_size=64, epochs=3, latent_dim=25)
Mean Match = 0.3127566498499908
Predicting and Validation took 242.19s
Predicting validation set
Mean Match = 0.31361002944249217
Predicting and Validation took 42.70999999999998s

model = KerasRNNModel(has_quality=True, prediction_length=k, batch_size=64, epochs=3, latent_dim=150)
Fitting took 411.86999999999995s
Predicting training set
Mean Match = 0.32794194056618003
Predicting and Validation took 315.83s
Predicting validation set
Mean Match = 0.32272770443536897
Predicting and Validation took 53.620000000000005s

>Started using Adam, input length=26
model = KerasRNNModel(has_quality=True, prediction_length=k, batch_size=64, epochs=10, latent_dim=100)
Predicting training set
Mean Match = 0.3603405795886898
Stats = {'A': 14164, 'G': 17714, 'C': 21141, 'T': 6644}
Predicting and Validation took 266.14s
Predicting validation set
Mean Match = 0.35520942159749264
Stats = {'C': 3739, 'T': 1148, 'A': 2431, 'G': 3211}
Predicting and Validation took 47.26999999999998s

model = KerasRNNModel(has_quality=False, prediction_length=k, batch_size=64, epochs=10, latent_dim=100)
Predicting training set
Mean Match = 0.3757772824028292
Stats = {'A': 12589, 'G': 17777, 'T': 8329, 'C': 20968}
Predicting and Validation took 275.4599999999999s
Predicting validation set
Mean Match = 0.36147782315509547
Stats = {'C': 3647, 'T': 1468, 'A': 2184, 'G': 3230}
Predicting and Validation took 47.12999999999988s

Same parameters as above but no reverse complement:
Predicting training set
Mean Match = 0.3573128624585163
Stats = {'A': 5402, 'G': 6845, 'T': 4052, 'C': 13532}
Predicting and Validation took 135.25s
Predicting validation set
Mean Match = 0.35327635327635326
Stats = {'C': 2337, 'T': 709, 'A': 978, 'G': 1241}
Predicting and Validation took 23.470000000000027s	

100 contig
Predicting training set
Mean Match = 0.9974709856227265
Stats = {'A': 29873, 'C': 28709, 'G': 27750, 'T': 29128}
Predicting and Validation took 528.8999999999999s
Predicting validation set
Mean Match = 0.9947978013349038
Stats = {'C': 5001, 'T': 5133, 'G': 4895, 'A': 5347}
Predicting and Validation took 91.19000000000028s	

1000 contig
Predicting training set
Mean Match = 0.9963231811292156
Stats = {'G': 123465, 'C': 124860, 'A': 129983, 'T': 128380}
Predicting and Validation took 2303.66s
Predicting validation set
Mean Match = 0.9913550147624586
Stats = {'A': 23034, 'C': 22034, 'T': 22659, 'G': 21689}
Predicting and Validation took 400.84000000000015s

Train on 0-30, 40-70, 80-100
Predict on 30-40, 70-80 (validation set)
Predicting training set
Mean Match = [0.99796549]
Stats = {'A': 56507, 'T': 56489, 'C': 52035, 'G': 49763}
Predicting and Validation took 976.3400000000001s
Predicting validation set
Mean Match = [0.99851309]
Stats = {'A': 28792, 'G': 24009, 'T': 29839, 'C': 25638}
Predicting and Validation took 489.4699999999998s
(Oops, I think my read lengths were too short)

Train on 0-400, 600-1000
Predict on 400-600 (validation set)
Predicting training set
Mean Match = [0.9959355]
Stats = {'A': 145686, 'T': 144376, 'C': 141939, 'G': 140025}
Predicting and Validation took 2558.83s
Predicting validation set
Mean Match = [0.95926097]
Stats = {'A': 35423, 'T': 33915, 'C': 37195, 'G': 36033}
Predicting and Validation took 637.0100000000002s
TODO: Probably want to check how many of the reads were identical between the sets
-----------------------------------
Nov 13

Take 1% of our total dataset (for the sake of speed)
Predicting 1 base:
Predicting took 7.570155328405228s
Mean Match = [0.99510575]
Validation took 0.007041550247913975s

Predicting 3 bases:
Predicting took 10.849231984066153s
Mean Match = [0.9953229  0.29861486 0.27019248]
Validation took 0.013865438525485274s


Predicting 10 bases:
Predicting took 21.65394776669234s (Runtime does not seem to scale linearly for this)
Mean Match = [0.99559383 0.29461246 0.2655718  0.24454236 0.25035049 0.26256759
 0.24113759 0.26156619 0.25015021 0.23993591]
Validation took 0.032266222850612536s
#TODO: I am not sure why the statistics change a little based on the value of d (eg. sometimes its 0.9951, othertimes 0.9953 for the first base)

Training a model to read in 26 bases and predict the next 1:
Fitting took 1128.41082243761s

Training a model to read in 26 bases and predict the next 3:
Fitting took 1228.3204924107392s

Predicting 1 base:
Predicting took 7.677277481601536s
Mean Match = [0.99458137]
Validation took 0.007905396192709802s

Predicting 3 bases:
Predicting took 12.36334337443455s
Mean Match = [0.99316424 0.99388379 0.9937039 ]
Validation took 0.030029313254839707s

Predicting 10 bases:
Predicting took 21.339792287407793s
Mean Match = [0.99439215 0.99559383 0.99359103 0.71179652 0.42058882 0.30262367
 0.28419788 0.25615862 0.26296816 0.24013619]
Validation took 0.03432257194825894s
#TODO: look at base 4 and 5. I need to test this on a bigger sample I believe but that looks interesting, it doesn't immediately drop to 30% when we prime it with 3 bases rather than 1


--------------
#TODO: currently we're doing this on HPCE with Tensorflow 1.5 which is kind of dumb because it looks like we're
CPU instruction optimizations. Since HPCE actually supports these, I'd like to run this job again on Monday to see
what happens to runtime.

In addition, need to test the 1000 bp contig in HPCE and locally to compare how much HPCE drops the runtime.

##########
###1000###
##########
Import took 0.3200000000000003s
Extraction took 2.9899999999999984s
Stats took 0.3200000000000003s
Label Integer Encoding took 4.890000000000001s
Encoding training set
Input one-hot encoding took 0.33000000000000185s
Output one-hot encoding took 0.019999999999999574s
Shifted one-hot output encoding took 0.00999999999999801s
Encoding validation set
Input one-hot encoding took 0.060000000000002274s
Output one-hot encoding took 0.0s
Shifted one-hot output encoding took 0.0s

Computing input statistics...
Unique mappings: 24278


Epoch 1/5
2018-11-19 09:55:30.547429: I tensorflow/core/platform/cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA
506688/506688 [==============================] - 252s 497us/step - loss: 0.4949
Epoch 2/5
506688/506688 [==============================] - 266s 525us/step - loss: 0.0796
Epoch 3/5
506688/506688 [==============================] - 268s 529us/step - loss: 0.0590
Epoch 4/5
506688/506688 [==============================] - 266s 525us/step - loss: 0.0484
Epoch 5/5
506688/506688 [==============================] - 267s 526us/step - loss: 0.0419
Fitting took 1319s

Predicting training set
9% finished
19% finished
29% finished
39% finished
50% finished
59% finished
69% finished
79% finished
89% finished
Stats = {'G': 123785, 'C': 125696, 'A': 129682, 'T': 127525}
Predicting took 7968.570000000001s
Mean Match = [0.99031554]
Validation took 0.929999999998472s
Predicting validation set
9% finished
19% finished
29% finished
39% finished
50% finished
59% finished
69% finished
79% finished
89% finished
Stats = {'A': 23040, 'C': 22116, 'T': 22512, 'G': 21748}
Predicting took 1275.1299999999974s
Mean Match = [0.98700456]
Validation took 0.2000000000007276s

###############################
###1000 WITH TENSORFLOW 1.12###
###############################
Using TensorFlow backend.
Import took 0.19000000000000128s
Extraction took 3.099999999999998s
Stats took 0.370000000000001s
Label Integer Encoding took 5.120000000000001s
Encoding training set
Input one-hot encoding took 0.4499999999999993s
Output one-hot encoding took 0.019999999999999574s
Shifted one-hot output encoding took 0.010000000000001563s
Encoding validation set
Input one-hot encoding took 0.08000000000000185s
Output one-hot encoding took 0.0s
Shifted one-hot output encoding took 0.0s
Computing input statistics...
Unique mappings: 24278

Epoch 1/5
2018-11-19 11:14:53.988598: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
506688/506688 [==============================] - 240s 474us/step - loss: 0.5111
Epoch 2/5
506688/506688 [==============================] - 239s 472us/step - loss: 0.0752
Epoch 3/5
506688/506688 [==============================] - 218s 430us/step - loss: 0.0559
Epoch 4/5
506688/506688 [==============================] - 221s 435us/step - loss: 0.0454
Epoch 5/5
506688/506688 [==============================] - 231s 456us/step - loss: 0.0391
Fitting took 1149 s

Computing input statistics...
Output stats: {'A': 152920, 'T': 151009, 'C': 147104, 'G': 145071}

################################
###10000 WITH TENSORFLOW 1.12###
################################
Import took 2.2647032737731934s
Extraction took 33.08223915100098s
Stats took 3.867544651031494s
Label Integer Encoding took 55.102012395858765s
Encoding training set
Input one-hot encoding took 3.7073183059692383s
Output one-hot encoding took 0.1924905776977539s
Shifted one-hot output encoding took 0.1898632049560547s
Encoding validation set
Input one-hot encoding took 0.8779551982879639s
Output one-hot encoding took 0.01780247688293457s
Shifted one-hot output encoding took 0.017885923385620117s

Computing input statistics...
Unique mappings: 274728

Fitting took 13308.463732719421s

Computing input statistics...
Output stats: {'A': 1659989, 'T': 1650341, 'C': 1716404, 'G': 1714844}

Predicting training set
9% finished
19% finished
29% finished
39% finished
49% finished
59% finished
69% finished
79% finished
89% finished
Stats = {'C': 1452108, 'G': 1450720, 'A': 1419492, 'T': 1408021}
Predicting took 25182.057337284088s
Mean Match = [0.97897455]
Validation took 8.702461957931519s
Predicting validation set
9% finished
19% finished
29% finished
39% finished
49% finished
59% finished
69% finished
79% finished
89% finished
Stats = {'T': 247799, 'A': 250360, 'C': 256231, 'G': 256847}
Predicting took 4936.308021306992s
Mean Match = [0.97732381]
Validation took 1.8224895000457764s


####################################
###Vanilla DNN (One-Hot Encoding)###
####################################
read_1_1000.fastq + read_2_1000.fastq (59663 reads)
-------

Import took 0.10106563568115234s
Extraction took 0.4509279727935791s
Stats took 0.06615138053894043s
Label Integer Encoding took 0.7581031322479248s
Encoding training set
Input one-hot encoding took 0.06043219566345215s
Output one-hot encoding took 0.002413511276245117s
Shifted one-hot output encoding took 1.3113021850585938e-05s
Encoding validation set
Input one-hot encoding took 0.010597705841064453s
Output one-hot encoding took 0.0002913475036621094s
Shifted one-hot output encoding took 1.3113021850585938e-05s

Fitting took 29.91980767250061s
Predicting training set
Predicting took 0.8675267696380615s
Mean Match = [0.66233679]
Validation took 0.1592094898223877s
Predicting validation set
Predicting took 0.15867877006530762s
Mean Match = [0.40260234]
Validation took 0.025839805603027344s

Overfitting! But much faster


ecoli_contig_1000.fastq (506688 reads)
-------
Import took 0.2921135425567627s
Extraction took 2.533963441848755s
Stats took 0.3733077049255371s
Label Integer Encoding took 5.172656059265137s
Encoding training set
Input one-hot encoding took 0.40233850479125977s
Output one-hot encoding took 0.016208171844482422s
Shifted one-hot output encoding took 2.956390380859375e-05s
Encoding validation set
Input one-hot encoding took 0.07160425186157227s
Output one-hot encoding took 0.002321004867553711s
Shifted one-hot output encoding took 4.76837158203125e-05s
Computing input statistics...
Unique mappings: 24278


Fitting took 253.6513295173645s

Output stats: {'A': 152920, 'T': 151009, 'C': 147104, 'G': 145071}

Predicting training set
Predicting took 6.904381990432739s
Mean Match = [0.9976001]
Validation took 0.8070955276489258s
Predicting validation set
Predicting took 1.29972243309021s
Mean Match = [0.99415093]
Validation took 0.19814658164978027s


ecoli_contig_10000.fastq (506688 reads)
Import took 2.378763437271118s
Extraction took 28.747227430343628s
Stats took 4.113601446151733s
Label Integer Encoding took 60.82844829559326s
Encoding training set
Input one-hot encoding took 5.007871866226196s
Output one-hot encoding took 0.1824965476989746s
Shifted one-hot output encoding took 2.2172927856445312e-05s
Encoding validation set
Input one-hot encoding took 0.8478875160217285s
Output one-hot encoding took 0.017707109451293945s
Shifted one-hot output encoding took 2.0742416381835938e-05s
Computing input statistics...
Unique mappings: 274728

Fitting took 2934.6915521621704s

Output stats: {'A': 1659989, 'T': 1650341, 'C': 1716404, 'G': 1714844}

Predicting training set
Predicting took 86.8417317867279s
Mean Match = [0.98693132]
Validation took 9.670882225036621s
Predicting validation set
Predicting took 15.419764995574951s
Mean Match = [0.98499758]
Validation took 1.6866600513458252s